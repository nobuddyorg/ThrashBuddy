name: Quality Gate

on:
    pull_request:
        branches: [develop]

    push:
        branches: [develop]

    workflow_dispatch:

permissions:
    contents: read
    issues: read
    checks: write
    pull-requests: write

jobs:
    backend:
        name: Backend Analysis
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: true
                  fetch-depth: 0
            - name: Install Dependencies and Run Unit Tests
              working-directory: ./services/backend
              run: |
                  ./gradlew clean jacocoTestReport
            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action/linux@v2
              if: always()
              with:
                  check_name: "Backend Unit Tests"
                  files: |
                      ./services/backend/build/test-results/**/*.xml

    frontend:
        name: Frontend Analysis
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v4
              with:
                  submodules: true
                  fetch-depth: 0
            - name: Install Dependencies
              working-directory: ./services/frontend
              run: ./npmw install
            - name: Unit Tests and Coverage
              working-directory: ./services/frontend
              run: ./npmw test -- --browsers ChromeHeadless --watch=false
            - name: Lint
              working-directory: ./services/frontend
              run: ./npmw run lint
            - name: Publish Test Results
              uses: EnricoMi/publish-unit-test-result-action/linux@v2
              if: always()
              with:
                  check_name: "Frontend Unit Tests"
                  files: |
                      ./services/frontend/junit.xml

    infra-and-images:
        concurrency:
            group: "test--infra-group-${{ github.event.pull_request.number }}"
            cancel-in-progress: false
        if: github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' # takes too long for pushes
        needs: [backend, frontend]
        name: Infrastructure and Images
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                  submodules: true
            - name: Write .env file
              run: |
                  echo "${{ secrets.DOT_ENV }}" > ./infrastructure/helm/.env
            - uses: hadolint/hadolint-action@v3.1.0
              with:
                  dockerfile: ./services/backend/Dockerfile
            - uses: hadolint/hadolint-action@v3.1.0
              with:
                  dockerfile: ./services/frontend/Dockerfile

            - name: Docker Cleanup
              run: |
                  docker stop $(docker ps -q) || true
                  docker rm -f $(docker ps -aq) || true
                  docker rmi -f $(docker images --filter "dangling=true" -q) || true
                  docker system prune -a --volumes -f
                  docker builder prune -a -f
                  docker ps -aq
                  docker images
                  docker volume ls
                  docker network ls

            - name: Build Docker Images
              run: |
                  infrastructure/docker/build-all.sh
                  docker images

            - name: Set up Kubernetes with Minikube
              working-directory: ./infrastructure/helm
              run: |
                  minikube delete --all
                  minikube start --driver=docker
                  ./load.sh
            - name: Helm
              working-directory: ./infrastructure/helm
              run: |
                  ./install.sh
            - name: frontend tests
              working-directory: ./services/frontend-test
              run: |
                  nohup minikube tunnel > /dev/null 2>&1 &
                  # Wait for the ingress-nginx-controller to be ready before setting the BASE_URL for Playwright tests
                  sleep 10
                  INGRESS_IP=$(kubectl get svc ingress-nginx-controller -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
                  export BASE_URL="http://$INGRESS_IP/app/index.html"
                  npm ci
                  ./npmw install 
                  ./npmw test
            - name: Archive Playwright Test Results
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: report.zip
                  path: services/frontend-test/test-results
                  retention-days: 7
            - name: Minikube delete cluster
              if: always()
              run: minikube delete --all
